#' @title Plot Exacerbations
#' @description Creates plots of exacerbations
#' @param nPatients number of patients/agents/individuals to simulate
#' @param arg1 string: one of "sex", "year", "gold"
#' @param arg2 string: one of "sex", "year", "gold"
#' @param exacType string: "all" or "severe"
#' @param perCapita numeric: if null, parameter is ignored, otherwise, population size to look at
#' @return Returns a plot
#' @export
getExResults = function() {
extendedResults = Cget_output_ex()
outputNames = names(extendedResults)
timeHorizon = nrow(extendedResults$n_alive_by_ctime_age)
maxAge = ncol(extendedResults$n_alive_by_ctime_age)
sexOptions = c("Male", "Female")
timeOptions = paste("Year", seq(1, timeHorizon, by=1))
ageOptions = paste(seq(0, maxAge-1, by=1), "years old")
smokingOptions = c("Sustained Quitter", "Intermittent Quitter", "Continuous Smoker")
goldOptions = c("GOLD I", "GOLD II", "GOLD III", "GOLD IV")
exacerbationOptions = c("Mild", "Moderate", "Severe", "Very Severe")
for(name in outputNames) {
res = extendedResults[[name]]
if(grepl("by", name)) {
by = strsplit(name, "by_")[[1]][2]
} else {
next
}
if(class(res)!="matrix") {
next
}
if(grepl("ctime", by)) {
rownames(res) = timeOptions
}
if(grepl("sex", by)) {
colnames(res) = sexOptions
}
if(grepl("age", by)) {
if(grepl("sex", by)) {
rownames(res) = ageOptions
} else {
colnames(res) = ageOptions
}
}
if(grepl("smoking_status", by)) {
colnames(res) = smokingOptions
}
if(grepl("gold", by)) {
if(grepl("exac", name)) {
if(grepl("severity", by)) {
rownames(res) = goldOptions
} else {
colnames(res) = goldOptions
}
}
}
if(grepl("severity", by)) {
if(grepl("exac", name)) {
colnames(res) = exacerbationOptions
}
}
extendedResults[[name]] = res
}
return(extendedResults)
}
getMainResults = function() {
mainResults = Cget_output()
}
getDemographicResults = function() {
extendedResults = getExResults()
demographicParam = c("n_alive_by_ctime_sex",
"n_alive_by_ctime_age",
"n_smoking_status_by_ctime",
"n_current_smoker_by_ctime_sex",
"n_alive_by_age_sex",
"sum_age_by_ctime_sex",
"n_death_by_age_sex")
}
library(epicR)
init_session()
run(1000)
eventsMatrix <- as.data.frame(Cget_all_events_matrix())
op <- Cget_output()
extendedResults <- getExResults()
terminate_session()
eventsMatrix
exacerbationRate = function(extendedResults, numRows, exacType = c("all", "severe")) {
exacType = match.arg(exacType)
if(exacType == "all") {
indices = c(1,2,3,4)
} else {
indices = c(3,4)
}
rates = data.frame(male = rep(0, numRows))
rates$female <- rowSums(extendedResults$n_exac_by_ctime_severity_female [,indices]) / (extendedResults$n_COPD_by_ctime_sex)[,2]
rates$male <- rowSums(extendedResults$n_exac_by_ctime_severity [,indices] -
extendedResults$n_exac_by_ctime_severity_female [,indices]) /
(extendedResults$n_COPD_by_ctime_sex)[,1]
return(rates)
}
genderOptions = c("male", "female")
exacOptions = c("Mild", "Moderate", "Severe", "Very Severe")
columnNames = c("Year")
columnNames = c(columnNames, genderOptions)
numColumns = length(columnNames)
numRows = input$global_parameters$time_horizon
model_input <- init_input()
input <- model_input$values
numRows = input$global_parameters$time_horizon
data = matrix (NA, nrow = numRows, ncol = numColumns)
colnames(data) = columnNames
data[1:input$global_parameters$time_horizon, 1] = c(2015:(2015+input$global_parameters$time_horizon-1))
rates = exacerbationRate(extendedResults, numRows)
data[,2] = rates$male
data[,3] = rates$female
data <- as.data.frame(data)
dfm <- reshape2::melt(data[,c("Year", "male", "female")],id.vars = 1)
names(dfm) = c("Year", "Gender", "value")
p <- ggplot(dfm, aes(x = Year, y = value, color = Gender)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = "Severe and Very Severe Exacerbations by Gender") +
ylab ("Exacerbation Rate")  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
library(ggplot2)
library(ggthemese)
library(ggthemes)
p <- ggplot(dfm, aes(x = Year, y = value, color = Gender)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = "Severe and Very Severe Exacerbations by Gender") +
ylab ("Exacerbation Rate")  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
exacType = "severe"
rates = exacerbationRate(extendedResults, numRows, exacType)
data[,2] = rates$male
data[,3] = rates$female
data <- as.data.frame(data)
dfm <- reshape2::melt(data[,c("Year", "male", "female")],id.vars = 1)
names(dfm) = c("Year", "Gender", "value")
p <- ggplot(dfm, aes(x = Year, y = value, color = Gender)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = "Severe and Very Severe Exacerbations by Gender") +
ylab ("Exacerbation Rate")  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
data
dfm
exac_rate_by_sex_by_year <- matrix (NA, nrow = input$global_parameters$time_horizon, ncol = 3)
colnames(exac_rate_by_sex_by_year) <- c("Year", "male", "female")
exac_rate_by_sex_by_year[1:input$global_parameters$time_horizon, 1] <- c(2015:(2015+input$global_parameters$time_horizon-1))
exac_rate_by_sex_by_year[, 3] <- rowSums(op_ex$n_exac_by_ctime_severity_female [, 1:4]) / (op_ex$n_COPD_by_ctime_sex)[, 2]
op_ex = extendedResults
exac_rate_by_sex_by_year[1:input$global_parameters$time_horizon, 1] <- c(2015:(2015+input$global_parameters$time_horizon-1))
exac_rate_by_sex_by_year[, 3] <- rowSums(op_ex$n_exac_by_ctime_severity_female [, 1:4]) / (op_ex$n_COPD_by_ctime_sex)[, 2]
exac_rate_by_sex_by_year[, 2] <- rowSums(op_ex$n_exac_by_ctime_severity [, 1:4] - op_ex$n_exac_by_ctime_severity_female [, 1:4]) / (op_ex$n_COPD_by_ctime_sex)[, 1]
exac_rate_by_sex_by_year <- as.data.frame(exac_rate_by_sex_by_year)
openxlsx::writeData(wb, "Exacerbation_sex_year", exac_rate_by_sex_by_year, startCol = 2, startRow = 3, colNames = TRUE)
dfm <- reshape2::melt(exac_rate_by_sex_by_year[,c("Year", "male", "female")],id.vars = 1)
plot_exac_rate_by_sex_by_year <- ggplot2::ggplot(dfm, aes(x = Year, y = value, color = variable)) +  theme_tufte(base_size=14, ticks=F) +
geom_point () + geom_line() + labs(title = "Exacerbation rate by gender") + ylab ("Exacerbation Rate")  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) + scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
plot(plot_exac_rate_by_sex_by_year) #plot needs to be showing
exac_by_age_year <- matrix (NA, nrow = input$global_parameters$time_horizon, ncol = 6)
colnames(exac_by_age_year) <- c("Year", "40-55", "55-70", "70-85", "85+", "All")
exac_by_age_year[1:input$global_parameters$time_horizon, 1] <- c(2015:(2015+input$global_parameters$time_horizon-1))
for (i in (1:3)){
exac_by_age_year[, i+1] <- rowSums(op_ex$n_exac_by_ctime_age [, (25+(15*i)):(35+15*(i+1-1))])
}
exac_by_age_year[, 5] <- rowSums(op_ex$n_exac_by_ctime_age [, 85:111]) # special case of 80+
exac_by_age_year[, 6] <- rowSums (exac_by_age_year[, 2:5]) # all
exac_by_age_year[, 2:6]<- exac_by_age_year[, 2:6] / nPatients * 18e6 #18e6 is roughly the 40+ population of Canada as of 2015
exac_by_age_year <- as.data.frame(exac_by_age_year)
nPatients = 1000
exac_by_age_year[, 2:6]<- exac_by_age_year[, 2:6] / nPatients * 18e6 #18e6 is roughly the 40+ population of Canada as of 2015
exac_by_age_year <- as.data.frame(exac_by_age_year)
dfm <- reshape2::melt(exac_by_age_year[,c("Year", "40-55", "55-70", "70-85", "85+", "All")],id.vars = 1)
plot_exac_by_age_year <- ggplot2::ggplot(dfm, aes(x = Year, y = value, color = variable)) +  theme_tufte(base_size=14, ticks=F) +
geom_point () + geom_line() + labs(title = "Number of Exacerbations per age group") + ylab ("Number of Exacerbations")  +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12)) +
labs(caption = "(All severity levels, assuming 40+ population of Canada as 18.6 million as of the start of the simulation)")
plot(plot_exac_by_age_year) #plot needs to be showing
op_ex$n_exac_by_ctime_age
extendedResults$n_COPD_by_ctime_severity
names(extendedResults)
groupAgeColumns = function(data, nPatients) {
numRows = nrow(data)
dataGrouped <- matrix (NA, nrow = numRows, ncol = 5)
for (i in (1:3)){
dataGrouped[,i] <- rowSums(data[, (25+(15*i)):(35+15*(i+1-1))])
}
dataGrouped[,4] <- rowSums(data[, 85:111]) # special case of 80+
dataGrouped[,5] <- rowSums(dataGrouped[, 1:4]) # all
dataGrouped[, 1:5]<- exac_by_age_year[,1:5] / nPatients * 18e6 #18e6 is roughly the 40+ population of Canada as of 2015
return(dataGrouped)
}
argY= "exacerbation_rate"
argX = "year"
groupBy = "sex"
genderOptions = c("male", "female")
exacOptions = c("Mild", "Moderate", "Severe", "Very Severe")
ageOptions = c("40-55", "55-70", "70-85", "85+", "All")
if(argX == "year") {
columnNames = c("Year")
}
if(groupBy = "sex") {
columnNames = c(columnNames, genderOptions)
} else if(groupBy = "age") {
columnNames = c(columnNames, ageOptions)
}
genderOptions = c("male", "female")
exacOptions = c("Mild", "Moderate", "Severe", "Very Severe")
ageOptions = c("40-55", "55-70", "70-85", "85+", "All")
if(argX == "year") {
columnNames = c("Year")
}
if(groupBy == "sex") {
columnNames = c(columnNames, genderOptions)
} else if(groupBy == "age") {
columnNames = c(columnNames, ageOptions)
}
numColumns = length(columnNames)
numRows = input$global_parameters$time_horizon
data = matrix (NA, nrow = numRows, ncol = numColumns)
colnames(data) = columnNames
data[1:input$global_parameters$time_horizon, 1] = c(2015:(2015+input$global_parameters$time_horizon-1))
if(argY=="number_of_exacerbations") {
idString = paste0('n_exac_by_ctime_', groupBy)
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData)
data[,2:6] = groupedData
graphTitle = "Number of Exacerbations by Age Group"
yTitle = "Number of Exacerbations"
}
if(argY=="exacerbation_rate") {
rates = exacerbationRate(extendedResults, numRows, exacType)
data[,2] = rates$male
data[,3] = rates$female
graphTitle = "Severe and Very Severe Exacerbation Rate by Gender"
yTitle = "Exacerbation Rate"
}
data <- as.data.frame(data)
dfm <- reshape2::melt(data[,columnNames],id.vars = 1)
names(dfm) = c("Year", groupBy, "value")
p <- ggplot(dfm, aes(x = Year, y = value, color = Gender)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
dfm
p <- ggplot(dfm, aes(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
p <- ggplot(dfm, aes(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
p <- ggplot(dfm, aes_string(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
argY = "number_of_exacerbations"
groupBy = "age"
genderOptions = c("male", "female")
exacOptions = c("Mild", "Moderate", "Severe", "Very Severe")
ageOptions = c("40-55", "55-70", "70-85", "85+", "All")
if(argX == "year") {
columnNames = c("Year")
}
if(groupBy == "sex") {
columnNames = c(columnNames, genderOptions)
} else if(groupBy == "age") {
columnNames = c(columnNames, ageOptions)
}
numColumns = length(columnNames)
numRows = input$global_parameters$time_horizon
data = matrix (NA, nrow = numRows, ncol = numColumns)
colnames(data) = columnNames
data[1:input$global_parameters$time_horizon, 1] = c(2015:(2015+input$global_parameters$time_horizon-1))
if(argY=="number_of_exacerbations") {
idString = paste0('n_exac_by_ctime_', groupBy)
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData)
data[,2:6] = groupedData
graphTitle = "Number of Exacerbations by Age Group"
yTitle = "Number of Exacerbations"
}
nPatients = 1000
numColumns = length(columnNames)
numRows = input$global_parameters$time_horizon
data = matrix (NA, nrow = numRows, ncol = numColumns)
colnames(data) = columnNames
data[1:input$global_parameters$time_horizon, 1] = c(2015:(2015+input$global_parameters$time_horizon-1))
if(argY=="number_of_exacerbations") {
idString = paste0('n_exac_by_ctime_', groupBy)
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData)
data[,2:6] = groupedData
graphTitle = "Number of Exacerbations by Age Group"
yTitle = "Number of Exacerbations"
}
if(argY=="number_of_exacerbations") {
idString = paste0('n_exac_by_ctime_', groupBy)
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData, nPatients)
data[,2:6] = groupedData
graphTitle = "Number of Exacerbations by Age Group"
yTitle = "Number of Exacerbations"
}
data <- as.data.frame(data)
dfm <- reshape2::melt(data[,columnNames],id.vars = 1)
data
idString = paste0('n_exac_by_ctime_', groupBy)
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData, nPatients)
groupedData
prelimData = extendedResults[[idString]]
prelimData
data3 = data
data = prelimData
numRows = nrow(data)
dataGrouped <- matrix (NA, nrow = numRows, ncol = 5)
for (i in (1:3)){
dataGrouped[,i] <- rowSums(data[, (25+(15*i)):(35+15*(i+1-1))])
}
dataGrouped
dataGrouped[,4] <- rowSums(data[, 85:111]) # special case of 80+
dataGrouped
dataGrouped[,5] <- rowSums(dataGrouped[, 1:4]) # all
dataGrouped
dataGrouped[, 1:5] = dataGrouped[,1:5] / nPatients * 18e6 #18e6 is roughly the 40+ population of Canada as of 2015
groupAgeColumns = function(data, nPatients) {
numRows = nrow(data)
dataGrouped <- matrix (NA, nrow = numRows, ncol = 5)
for (i in (1:3)){
dataGrouped[,i] <- rowSums(data[, (25+(15*i)):(35+15*(i+1-1))])
}
dataGrouped[,4] <- rowSums(data[, 85:111]) # special case of 80+
dataGrouped[,5] <- rowSums(dataGrouped[, 1:4]) # all
dataGrouped[, 1:5] = dataGrouped[,1:5] / nPatients * 18e6 #18e6 is roughly the 40+ population of Canada as of 2015
return(dataGrouped)
}
data=data3
prelimData = extendedResults[[idString]]
groupedData = groupAgeColumns(prelimData, nPatients)
groupedData
data = matrix (NA, nrow = numRows, ncol = numColumns)
colnames(data) = columnNames
data[1:input$global_parameters$time_horizon, 1] = c(2015:(2015+input$global_parameters$time_horizon-1))
data[,2:6] = groupedData
graphTitle = "Number of Exacerbations by Age Group"
yTitle = "Number of Exacerbations"
data <- as.data.frame(data)
dfm <- reshape2::melt(data[,columnNames],id.vars = 1)
names(dfm) = c("Year", groupBy, "value")
p <- ggplot(dfm, aes_string(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = c("#CC6666", "#56B4E9")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
colorScale = c("#CC6666", "#56B4E9", "#46B6E9", "#56C4E9", "#56C4E8")
p <- ggplot(dfm, aes_string(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = colorScale) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
colorScale = c("#330033", "#8cf2f2", "#c51672", "#007bff", "#56B4E9")
p <- ggplot(dfm, aes_string(x = "Year", y = "value", color = groupBy)) +
theme_tufte(base_size=14, ticks=F) +
geom_point () +
geom_line() +
labs(title = graphTitle) +
ylab (yTitle)  +
scale_colour_manual(values = colorScale) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 12))
p
op_ex$n_exac_by_ctime_GOLD
op_ex$cumul_time_by_ctime_GOLD
extendedResults$n_exac_by_ctime_GOLD[, 1:4] / (extendedResults$cumul_time_by_ctime_GOLD)[,2:5]
extendedResults$cumul_time_by_ctime_GOLD
rates = extendedResults$n_exac_by_ctime_GOLD[2:20, 1:4] / (extendedResults$cumul_time_by_ctime_GOLD)[2:20,2:5]
rates
rates = matrix (0, nrow = numRows, ncol = 4)
rates[2:20, 1:4] = extendedResults$n_exac_by_ctime_GOLD[2:20, 1:4] / (extendedResults$cumul_time_by_ctime_GOLD)[2:20,2:5]
rates
data
data/1000
getwd()
setwd("~/Coding/BookDown/epicBookDown/")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
eventsMatrix
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("1-epic.Rmd", "bookdown::gitbook", output_dir = "docs")
